name: Tests
on:
    pull_request:
        types:  [opened, synchronize]
    push:
      branches:
        - main

jobs:
    run-tests:
        permissions:
          contents: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Configure Git user
              run : |
                git config user.name github-actions
                git config user.email github-actions@github.com
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: '3.12'
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
            - name: Run pytest
              run: |
                pip install pytest
                pytest -v tests
            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: '3.12'
            - name: Create dedicated branch
              run: |
                  head=$(git rev-parse HEAD)
                  git checkout -b tests/$head
              shell: bash
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
            - name: Overwrite input with output
              run: |
                for dir in tests/test_files/*/; do
                    input_file="${dir}input.view.lkml"
                    output_file="${dir}output.view.lkml"
                
                    # Check if both the input and output files exist
                    if [[ -f "$input_file" && -f "$output_file" ]]; then
                        # Copy the output file to replace the input file
                        cp "$output_file" "$input_file"
                        echo "Replaced $input_file with $output_file"
                    else
                        echo "Either $input_file or $output_file does not exist in directory $dir"
                    fi
                done
              shell: bash
            - name: Push test changes
              run: |
                git add .
                git commit -m "Replace input with output" || continue
                git push
        